name: ci
on:
  pull_request:
    branches: [master]
  push:
    branches: [master]

jobs:

  test:
    name: Build & Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # The docs seem to suggest that we can have a matrix with just an
        # include directive, but it results in a "matrix must define at least
        # one vector" error in the CI system.
        build: [stable, beta, nightly, macos, win-msvc, win-gnu]
        include:
        - build: stable
          os: ubuntu-latest
          rust: stable
        - build: beta
          os: ubuntu-latest
          rust: beta
        - build: nightly
          os: ubuntu-latest
          rust: nightly
        - build: macos
          os: macos-latest
          rust: stable
        - build: win-msvc
          os: windows-latest
          rust: stable
        - build: win-gnu
          os: windows-latest
          rust: stable-x86_64-gnu

    steps:

    - name: Checkout repository
      uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        override: true
        profile: minimal

    - name: Build
      run: cargo build --verbose

    - name: Docs
      run: cargo doc --verbose

    - name: Tests
      run: cargo test --verbose

  linters:
    name: Code Linters
    runs-on: ubuntu-18.04
    steps:

    - name: Checkout repository
      uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        profile: minimal
        components: rustfmt, clippy

    - name: Check Clippy
      uses: actions-rs/clippy-check@v1
      with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features --all-targets --lib --tests -- -D warnings
          name: "Code Linters: Clippy Results"

    - name: Check formatting
      run: cargo fmt -- --check

    - name: Audit Crates
      uses: actions-rs/audit-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

  coverage:
    name: Code Coverage Collection
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install stable toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Run cargo-tarpaulin
      uses: actions-rs/tarpaulin@v0.1

    - name: Upload to codecov.io
      uses: codecov/codecov-action@v1.0.2
      with:
        token: ${{secrets.CODECOV_TOKEN}}

    - name: Archive code coverage results
      uses: actions/upload-artifact@v1
      with:
        name: code-coverage-report
        path: cobertura.xml
